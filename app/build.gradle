import java.util.regex.Matcher
import java.util.regex.Pattern

apply plugin: 'com.android.application'

android {

    compileSdkVersion rootProject.compileSdkVersion

    defaultConfig {
        applicationId "com.app.architecture"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0.0"
    }

    def appName = "architecture"
    flavorDimensions "architecture"

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def name = appName + "_" + getCurrentFlavor() + "_" + variant.mergedFlavor.versionName + "_" +
                            variant.mergedFlavor.versionCode + "_" +
                            getDate() + ".apk";
                    output.outputFileName = name
                }
            }

        }
        debug {
            debuggable true
        }
    }

    productFlavors {
        dev {
            buildConfigField "String", "BASE_URL", '"http://devapi/"'
        }
        stag {
            buildConfigField "String", "BASE_URL", '"http://stagapi/"'
        }
    }

    lintOptions {
        abortOnError false
        disable 'MissingTranslation'
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:design:$rootProject.supportLibraryVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.RETROFIT_VERSION"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.OK_HTTP"
    implementation "com.squareup.okhttp3:okhttp:$rootProject.OK_HTTP"

    implementation 'com.github.bumptech.glide:glide:4.7.1'
    implementation 'jp.wasabeef:glide-transformations:2.0.1'

    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
}

// Used for create apk with flavor name
def getCurrentFlavor() {
    Gradle gradle = getGradle()
    String tskReqStr = gradle.getStartParameter().getTaskRequests().toString()
    Pattern pattern;
    pattern = Pattern.compile("assemble(\\w+)(Release|Debug)")
    Matcher matcher = pattern.matcher(tskReqStr)
    if (matcher.find()) {
        return matcher.group(1).toLowerCase()
    } else {
        println "NO MATCH FOUND"
        return "";
    }
}

def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyy-MM-dd')
    return formattedDate
}
